language: dart
dist: xenial

# Custom configuration
sudo: false
addons:
  apt:
    packages:
      - libstdc++6
env:
  global:
    - FLUTTER_CHANNEL=stable
    - APP=mobile
    - ANDROID_API=28

notifications:
  slack: carsmarttalk:ebIR7RcS8prO79aX2K3zNmPM

before_install:
  - cd "CS Mobile/mobile/"

after_install:
  - cd ../../

install:
  - git clone https://github.com/flutter/flutter.git -b $FLUTTER_CHANNEL
  - export PATH="$PATH:`pwd`/flutter/bin/cache/dart-sdk/bin"
  - export PATH="$PATH:`pwd`/flutter/bin"
  - flutter doctor -v
  - flutter packages get

jobs:
  include:
    - stage: "Analyze Test"
      name: "Analyze code..."
      script: flutter analyze --no-current-package lib

    - stage: "Widget Tests"
      name: "Checking widgets..."
      script: flutter test test/widget_tests/

    - stage: "Unit Tests"
      name: "Checking functions..."
      script: flutter test test/unit_tests/

    # - stage: "Integration Tests"
    #   name: "Integration tests.."
    #   language: android
    #   dist: trusty
    #   android:
    #     components:
    #       - tools
    #       - platform-tools
    #       - build-tools-28.0.3
    #       - android-28
    #       - android-24
    #       - android-22
    #       - extra-google-google_play_services
    #       - extra-google-m2repository
    #       - extra-android-m2repository
    #       - sys-img-armeabi-v7a-android-22
    #   licenses:
    #     - "android-sdk-preview-license-52d11cd2"
    #     - "android-sdk-license-.+"
    #     - "google-gdk-license-.+"
    #   before_install:
    #     - cd "CS Mobile/mobile/"
    #     - yes | sdkmanager "platforms;android-28"
    #     - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a -c 32M
    #     - emulator -avd test -no-audio -no-window &
    #     - android-wait-for-emulator
    #     - adb devices
    #     - adb shell input keyevent 82 &
    #   script:
    #     - flutter devices
    #     - flutter run --enable-software-rendering
    #     - flutter driver --target=test/driver_test/app.dart

    - stage: "Coverage Tests"
      name: "Creating widget test coverage..."
      script: flutter test --coverage test/widget_tests/
      after_script: bash <(curl -s https://codecov.io/bash) -f coverage/lcov.info

    - stage: "Coverage Tests"
      name: "Creating unit test coverage..."
      script: flutter test --coverage test/unit_tests/
      after_script: bash <(curl -s https://codecov.io/bash) -f coverage/lcov.info

stages:
  - "Analyze Test"
  - "Widget Tests"
  - "Unit Tests"
  - "Coverage Tests"

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master
    - develop

cache:
  directories:
    - $HOME/.cache/pip
  before_cache:
    - rm -f $HOME/.cache/pip/log/debug.log
